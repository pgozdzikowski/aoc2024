package pl.gozdzikowski.pawel.adventofcode

import pl.gozdzikowski.pawel.adventofcode.day8.ResonantCollinearity
import pl.gozdzikowski.pawel.adventofcode.shared.input.FileInput
import pl.gozdzikowski.pawel.adventofcode.shared.input.Input
import pl.gozdzikowski.pawel.adventofcode.shared.input.StringInput
import spock.lang.Specification

class Day8 extends Specification {

    ResonantCollinearity resonantCollinearity = new ResonantCollinearity()

    def 'sample 1'() {
        given:
            String input = """............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............
"""
        when:
            def antinodes = resonantCollinearity.countDistinctAntinodes(new StringInput(input))
        then:
            antinodes == 14
    }

    def 'solution 1'() {
        given:
            Input input = new FileInput('day8.txt')
        when:
            def result = resonantCollinearity.countDistinctAntinodes(input)
        then:
            result == 348
    }

    def 'sample 2'() {
        given:
            String input = """............
........0...
.....0......
.......0....
....0.......
......A.....
............
............
........A...
.........A..
............
............
"""
        when:
            def antinodes = resonantCollinearity.countDistinctAntinodesAtAnyLength(new StringInput(input))
        then:
            antinodes == 34
    }

    def 'solution 2'() {
        given:
            Input input = new FileInput('day8.txt')
        when:
            def result = resonantCollinearity.countDistinctAntinodesAtAnyLength(input)
        then:
            result == 1221
    }
}
